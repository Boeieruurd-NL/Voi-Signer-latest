function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import { MessageSource } from '@algosigner/common/messaging/types';
export class MessageApi {
  constructor() {
    _defineProperty(this, "mc", void 0);

    this.mc = new MessageChannel();
  }

  listen(handler) {
    this.mc.port1.onmessage = handler;
  }

  send(body, source = MessageSource.DApp) {
    let msg = {
      source: source,
      body: body
    };
    window.postMessage(msg, window.location.origin, [this.mc.port2]);
  }

}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9tZXNzYWdpbmcvYXBpLnRzIl0sIm5hbWVzIjpbIk1lc3NhZ2VTb3VyY2UiLCJNZXNzYWdlQXBpIiwiY29uc3RydWN0b3IiLCJtYyIsIk1lc3NhZ2VDaGFubmVsIiwibGlzdGVuIiwiaGFuZGxlciIsInBvcnQxIiwib25tZXNzYWdlIiwic2VuZCIsImJvZHkiLCJzb3VyY2UiLCJEQXBwIiwibXNnIiwid2luZG93IiwicG9zdE1lc3NhZ2UiLCJsb2NhdGlvbiIsIm9yaWdpbiIsInBvcnQyIl0sIm1hcHBpbmdzIjoiOztBQUNBLFNBQWdDQSxhQUFoQyxRQUFvRCxvQ0FBcEQ7QUFFQSxPQUFPLE1BQU1DLFVBQU4sQ0FBaUI7QUFFcEJDLEVBQUFBLFdBQVcsR0FBRztBQUFBOztBQUNWLFNBQUtDLEVBQUwsR0FBVSxJQUFJQyxjQUFKLEVBQVY7QUFDSDs7QUFFREMsRUFBQUEsTUFBTSxDQUFDQyxPQUFELEVBQTZCO0FBQy9CLFNBQUtILEVBQUwsQ0FBUUksS0FBUixDQUFjQyxTQUFkLEdBQTBCRixPQUExQjtBQUNIOztBQUVERyxFQUFBQSxJQUFJLENBQUNDLElBQUQsRUFBb0JDLE1BQXFCLEdBQUdYLGFBQWEsQ0FBQ1ksSUFBMUQsRUFBZ0U7QUFDaEUsUUFBSUMsR0FBZ0IsR0FBRztBQUNuQkYsTUFBQUEsTUFBTSxFQUFFQSxNQURXO0FBRW5CRCxNQUFBQSxJQUFJLEVBQUVBO0FBRmEsS0FBdkI7QUFJQUksSUFBQUEsTUFBTSxDQUFDQyxXQUFQLENBQW1CRixHQUFuQixFQUF3QkMsTUFBTSxDQUFDRSxRQUFQLENBQWdCQyxNQUF4QyxFQUFnRCxDQUFDLEtBQUtkLEVBQUwsQ0FBUWUsS0FBVCxDQUFoRDtBQUNIOztBQWhCbUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge09uTWVzc2FnZUxpc3RlbmVyfSBmcm9tICcuL3R5cGVzJzsgXHJcbmltcG9ydCB7SnNvblJwY0JvZHksTWVzc2FnZUJvZHksTWVzc2FnZVNvdXJjZX0gZnJvbSAnQGFsZ29zaWduZXIvY29tbW9uL21lc3NhZ2luZy90eXBlcyc7XHJcblxyXG5leHBvcnQgY2xhc3MgTWVzc2FnZUFwaSB7XHJcbiAgICBtYzogTWVzc2FnZUNoYW5uZWw7XHJcbiAgICBjb25zdHJ1Y3RvcigpIHtcclxuICAgICAgICB0aGlzLm1jID0gbmV3IE1lc3NhZ2VDaGFubmVsKCk7XHJcbiAgICB9XHJcblxyXG4gICAgbGlzdGVuKGhhbmRsZXI6IE9uTWVzc2FnZUxpc3RlbmVyKSB7XHJcbiAgICAgICAgdGhpcy5tYy5wb3J0MS5vbm1lc3NhZ2UgPSBoYW5kbGVyO1xyXG4gICAgfVxyXG5cclxuICAgIHNlbmQoYm9keTogSnNvblJwY0JvZHksIHNvdXJjZTogTWVzc2FnZVNvdXJjZSA9IE1lc3NhZ2VTb3VyY2UuREFwcCkge1xyXG4gICAgICAgIGxldCBtc2c6IE1lc3NhZ2VCb2R5ID0ge1xyXG4gICAgICAgICAgICBzb3VyY2U6IHNvdXJjZSxcclxuICAgICAgICAgICAgYm9keTogYm9keVxyXG4gICAgICAgIH1cclxuICAgICAgICB3aW5kb3cucG9zdE1lc3NhZ2UobXNnLCB3aW5kb3cubG9jYXRpb24ub3JpZ2luLCBbdGhpcy5tYy5wb3J0Ml0pO1xyXG4gICAgfVxyXG59Il19